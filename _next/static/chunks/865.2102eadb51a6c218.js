"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[865],{9622:function(e,r,n){n.d(r,{i:function(){return l}});var t=n(7462),a=n(7294),i=n(1128),u=n(9477);let o=e=>"function"==typeof e,l=a.forwardRef(({envMap:e,resolution:r=256,frames:n=1/0,children:l,makeDefault:c,...s},f)=>{let d=(0,i.D)(({set:e})=>e),m=(0,i.D)(({camera:e})=>e),v=(0,i.D)(({size:e})=>e),p=a.useRef(null);a.useImperativeHandle(f,()=>p.current,[]);let g=a.useRef(null),h=function(e,r,n){let t=(0,i.D)(e=>e.size),o=(0,i.D)(e=>e.viewport),l="number"==typeof e?e:t.width*o.dpr,c=t.height*o.dpr,{samples:s=0,depth:f,...d}=("number"==typeof e?void 0:e)||{},m=a.useMemo(()=>{let e=new u.WebGLRenderTarget(l,c,{minFilter:u.LinearFilter,magFilter:u.LinearFilter,type:u.HalfFloatType,...d});return f&&(e.depthTexture=new u.DepthTexture(l,c,u.FloatType)),e.samples=s,e},[]);return a.useLayoutEffect(()=>{m.setSize(l,c),s&&(m.samples=s)},[s,m,l,c]),a.useEffect(()=>()=>m.dispose(),[]),m}(r);a.useLayoutEffect(()=>{s.manual||p.current.updateProjectionMatrix()},[v,s]),a.useLayoutEffect(()=>{p.current.updateProjectionMatrix()}),a.useLayoutEffect(()=>{if(c)return d(()=>({camera:p.current})),()=>d(()=>({camera:m}))},[p,c,d]);let y=0,x=null,R=o(l);return(0,i.F)(r=>{R&&(n===1/0||y<n)&&(g.current.visible=!1,r.gl.setRenderTarget(h),x=r.scene.background,e&&(r.scene.background=e),r.gl.render(r.scene,p.current),r.scene.background=x,r.gl.setRenderTarget(null),g.current.visible=!0,y++)}),a.createElement(a.Fragment,null,a.createElement("orthographicCamera",(0,t.Z)({left:-(v.width/2),right:v.width/2,top:v.height/2,bottom:-(v.height/2),ref:p},s),!R&&l),a.createElement("group",{ref:g},R&&l(h.texture)))})},1865:function(e,r,n){n.r(r),n.d(r,{PartnersScene:function(){return g}});var t=n(5893),a=n(7294),i=n(6701),u=n(6493),o=n(1128),l=n(9462),c=n(9542),s=n(1715);let f=(0,a.forwardRef)((e,r)=>{let n=(0,a.useRef)(null),f=(0,a.useRef)({value:0}),d=(0,a.useRef)({value:{x:0,y:0}}),m=(0,a.useRef)({value:0}),{additionalRef:v}=e,p=(0,i.mE)("/planetTexture.webp"),g=(0,s.Lm)();return(0,o.F)(e=>{let{clock:r,pointer:t}=e;f.current.value=r.getElapsedTime(),v.current&&n.current&&(v.current.rotation.y+=.005,n.current.rotation.y=(0,c.t7)(n.current.rotation.y,t.x/2,.075),n.current.rotation.x=(0,c.t7)(n.current.rotation.x,-t.y/2,.075))}),(0,t.jsxs)("group",{ref:n,position:[0,g>1024?-800:-350,0],scale:g>1024?[1,1,1]:g>576?[.6,.5,.5]:[.4,.3,.3],children:[(0,t.jsx)(t.Fragment,{}),(0,t.jsx)(u.aL,{ref:v,args:[800.5,128,128],scale:[1,1,1],children:(0,t.jsx)("meshBasicMaterial",{transparent:!0,toneMapped:!1,color:16777215,map:p,onBeforeCompile:e=>{e.uniforms.uTime=f.current,e.uniforms.uPointer=d.current,e.uniforms.uActive=m.current,e.vertexShader="\n                            varying vec2 vUv;\n                            varying vec3 vPosition;\n                        "+e.vertexShader.replace("void main() {","\n                            void main() {\n                                vUv = uv;\n                                vPosition = position;\n                        "),e.fragmentShader="\n                            varying vec2 vUv;\n                            varying vec3 vPosition;\n\n                            uniform float uTime;\n                            uniform vec2 uPointer;\n                            uniform float uActive;\n                            ".concat(l.Th,"\n\n                        ")+e.fragmentShader.replace("#include <dithering_fragment>","\n                            #include <dithering_fragment>\n                            \n                            float frequency = 20.0;\n                            float strength = 2.0;\n                            float t = uTime * 0.01;\n\n                            float gridSize = 100.0;\n                            vec2 gridUV = fract(vUv * gridSize);\n\n                            float noise = perlin4d(vec4(vec3(vUv.x, vUv.y * 2.0, t) * frequency, 1.0)) * strength;\n                            \n                            noise = min(max(noise, 0.35), 0.4);\n\n                            float gradientAlpha = smoothstep(0.73, 0.83, vUv.y);\n                            float noiseAlpha = 0.8 + noise * .4;\n\n                            gl_FragColor.rgb *= noise;\n                            // gl_FragColor.r = 0.3;\n                            gl_FragColor.a = noiseAlpha; //gradientAlpha\n                        ")}})})]})});f.displayName="SurfaceSphere";var d=n(4087),m=n(9622),v=n(761),p=n(736);let g=(0,a.memo)((0,a.forwardRef)((e,r)=>{let n=(0,a.useRef)(null),{additionalRef:i}=e;return(0,a.useImperativeHandle)(r,()=>n.current),(0,t.jsxs)(v.D,{children:[(0,t.jsx)(m.i,{makeDefault:!0,far:1e3,position:[0,0,1e3]}),(0,t.jsx)(f,{additionalRef:i,ref:n}),(0,t.jsx)(p.x,{children:(0,t.jsx)(d.j,{granularity:8,charactersLimit:10})})]})}));g.displayName="PartnersScene"}}]);