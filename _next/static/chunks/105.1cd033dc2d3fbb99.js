"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[105],{1272:function(e,r,n){n.d(r,{Dt:function(){return u}});var o=n(161),t=n(6248),a=n(7294),i=n(1128);let l=(0,o.F)(()=>({}),t.X),u=e=>{(0,a.useEffect)(()=>{let r=(0,i.o)(r=>{e&&e(l.getState(),r)});return()=>r()},[])}},761:function(e,r,n){n.d(r,{D:function(){return f}});var o=n(5893);n(1272);var t=n(3095),a=n(3751),i=n(587),l=n(463);n(2973);var u=n(3458),c=n(7294);let f=e=>{let{children:r,style:n,dpr:f}=e,[s,m]=(0,t.YD)(),v=(0,c.useRef)(m);return(0,c.useEffect)(()=>{v.current=m},[m]),(0,o.jsxs)(l.Xz,{ref:s,flat:!0,linear:!0,camera:{position:[0,0,1e3],near:.1,far:1e5,fov:75},resize:{debounce:100},dpr:f||1.5,gl:{antialias:!1,alpha:!0,depth:!1,stencil:!1,powerPreference:"high-performance"},style:{position:"absolute",top:0,left:0,width:"100%",height:"100%",...n},frameloop:"demand",children:[r,(0,o.jsx)(a.G.Port,{}),(0,o.jsx)(u.Hr,{inViewRef:v}),(0,o.jsx)(i.q,{all:!0})]})}},3458:function(e,r,n){n.d(r,{Hr:function(){return a}}),n(5893),n(7294);var o=n(1128);new(n(9477)).Vector2,n(3095);var t=n(8270);function a(e){let{inViewRef:r}=e,n=(0,o.D)(e=>e.invalidate);return(0,t.y)(()=>{r.current&&n()},{framerate:10}),null}},4087:function(e,r,n){n.d(r,{j:function(){return s}});var o=n(5893),t=n(1128),a=n(2371),i=n(7294),l=n(9477);class u extends a.Qm{update(e,r,n){this.overwriteTime||(this.uniforms.get("uTime").value+=.2*n)}constructor({charactersTexture:e,granularity:r=16,charactersLimit:n=32,fillPixels:o=!1,overwriteColor:t=!1,color:i="#ffffff",greyscale:u=!1,invert:c=!1,matrix:f=!1,background:s="#000000"}={}){super("ASCIIEffect","\n    uniform sampler2D uCharactersTexture;\nuniform float uGranularity;\nuniform float uCharactersLimit;\nuniform bool uFillPixels;\nuniform vec3 uColor;\nuniform bool uOverwriteColor;\nuniform bool uGreyscale;\nuniform bool uInvert;\nuniform bool uMatrix;\nuniform float uTime;\nuniform vec3 uBackground;\n\nvec3 blendNormal(vec3 base, vec3 blend) {\n    return blend;\n}\n\nvec3 blendNormal(vec3 base, vec3 blend, float opacity) {\n    return (blendNormal(base, blend) * opacity + base * (1.0 - opacity));\n}\n\nfloat grayscale(vec3 c) {\n    return c.x * 0.299 + c.y * 0.587 + c.z * 0.114;\n}\n\nfloat random(in float x) {\n    return fract(sin(x) * 1e4);\n}\n\nvoid mainImage(const in vec4 inputColor, const in vec2 uv, out vec4 outputColor) {\n    vec2 size = vec2(4.); // Updated to match the atlas dimensions (4x4 grid of symbols)\n\n    // Pixelate the input texture\n    vec2 division = resolution / uGranularity;\n    vec2 d = 1.0 / division;\n    vec2 pixelizedUV = d * (floor(uv / d) + 0.5);\n\n    vec4 pixelizedColor = texture2D(inputBuffer, pixelizedUV);\n    float grayColor = grayscale(pixelizedColor.rgb);\n\n    // Get the character index based on the grayscale value\n    float charIndex = floor(grayColor * (uCharactersLimit - 1.0));\n    float charX = mod(charIndex, size.x);\n    float charY = floor(charIndex / size.x);\n\n    // Compute the UV for the character in the atlas\n    vec2 charUV = fract(uv * division);\n    vec2 charOffset = vec2(charX, charY) / size;\n\n    // Map the UV to the character in the atlas\n    charUV = charOffset + charUV / size;\n\n    vec4 ascii = texture2D(uCharactersTexture, charUV);\n    vec4 color = ascii;\n    color.rgb = uColor * ascii.r;\n    color.a = pixelizedColor.a;\n\n    if(uGreyscale) {\n        color.rgb *= grayscale(pixelizedColor.rgb);\n    }\n    if(color.rgb == vec3(0.)) {\n        color.a = 0.;\n    }\n    \n    float greenCoeff = smoothstep(0.4, 0.6, inputColor.r);\n\n    color.rgb = mix(color.rgb, vec3(0.137, 0.980, 0.678), greenCoeff);\n\n    float alpha = color.a;\n    outputColor = vec4(blendNormal(uBackground, color.rgb, color.a), color.a);\n}\n\n",{blendFunction:a.YQ.NORMAL,uniforms:new Map([["uCharactersTexture",new l.Uniform(e)],["uGranularity",new l.Uniform(r)],["uFillPixels",new l.Uniform(o)],["uCharactersLimit",new l.Uniform(n)],["uOverwriteColor",new l.Uniform(void 0!==i)],["uColor",new l.Uniform(new l.Color(i))],["uGreyscale",new l.Uniform(u)],["uInvert",new l.Uniform(c)],["uMatrix",new l.Uniform(f)],["uTime",new l.Uniform(0)],["uBackground",new l.Uniform(new l.Color("#ff0000"))]])})}}let c=(0,i.forwardRef)(function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=arguments.length>1?arguments[1]:void 0,n=(0,i.useMemo)(()=>new u(e),[]);return(0,i.useEffect)(()=>{let{charactersTexture:r,granularity:o,charactersLimit:t,fillPixels:a,overwriteColor:i,color:l,greyscale:u,invert:c,matrix:f,time:s,background:m}=e;n.uniforms.get("uCharactersTexture").value=r,n.uniforms.get("uGranularity").value=o,n.uniforms.get("uCharactersLimit").value=t,n.uniforms.get("uFillPixels").value=a,n.uniforms.get("uOverwriteColor").value=void 0!==l,n.uniforms.get("uColor").value.set(l),n.uniforms.get("uGreyscale").value=u,n.uniforms.get("uInvert").value=c,n.uniforms.get("uMatrix").value=f,n.uniforms.get("uBackground").value.set(m),n.overwriteTime=void 0!==s,n.overwriteTime?n.uniforms.get("uTime").value=s:n.uniforms.get("uTime").value=0},[e]),(0,o.jsx)("primitive",{ref:r,object:n})});c.displayName="ASCIIEffect";var f=n(6701);n(3458);let s=e=>{let{charactersLimit:r=29,granularity:n=10}=e,a=(0,f.mE)("/atlas.png");(0,i.useEffect)(()=>{a.minFilter=a.magFilter=l.NearestFilter,a.wrapS=a.wrapT=l.RepeatWrapping},[a]);let u=(0,t.D)(e=>e.viewport);return(0,o.jsx)(c,{charactersTexture:a,granularity:n*u.dpr,charactersLimit:r,fillPixels:!1,color:"#ffffff",fit:!0,greyscale:!0,invert:!1,matrix:!1,time:0,background:"#000000"})}}}]);